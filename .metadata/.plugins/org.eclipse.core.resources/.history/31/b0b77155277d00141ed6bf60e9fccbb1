package nju.edu.cn;

import java.util.LinkedList;
import java.util.Queue;

/**
 * 尝试用BFS解决pancake排序问题
 * 类似于贪吃蛇问题
 * @author eureka
 *
 */
public class PancakeSortingBFS {
	
	int[] cakeArray;
	int cakeCounter;
	Queue<CakeState> queue;
	int step;
	
	public PancakeSortingBFS(){
		cakeCounter = 0;
	}
	
	void run(int[] pancakeArray){
		
	}
	
	void init(int[] pancakeArray){
		assert( pancakeArray!=null );
		assert( pancakeArray.length > 0);
		
		
		cakeCounter = pancakeArray.length;
		cakeArray = new int[pancakeArray.length];
		for (int i = 0; i < pancakeArray.length; i++) {
			cakeArray[i] = pancakeArray[i];
		}
		
		queue = new LinkedList<CakeState>();
		step = 0;
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
