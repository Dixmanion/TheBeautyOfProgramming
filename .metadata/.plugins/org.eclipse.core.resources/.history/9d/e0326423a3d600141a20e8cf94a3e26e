package nju.edu.cn.leetcode;

import java.util.ArrayDeque;
import java.util.Queue;
import java.util.Set;

public class WordBreak {

	public static void main(String[] args) {
		String string = "abc";
		System.out.println(string.substring(0,0).length());
	}

	public boolean wordBreak(String s, Set<String> dict) {
        if (dict == null || dict.isEmpty()) {
			return false;
		}
        
        if (s.length() == 0) {
			return true;
		}
        
        Queue<Integer> queue = new ArrayDeque<Integer>();
        queue.add(0);
        
        while (!queue.isEmpty()) {
        	StringBuilder builder = new StringBuilder();
        	int index = queue.poll();
        	for (int i = index; i < s.length(); i++) {
				
			}
			
		}
        
        StringBuilder builder = new StringBuilder();
        
        for (int i = s.length()-1; i >= 0; i--) {
			builder.insert(0, s.charAt(i));
			if (dict.contains(builder.toString())) {
				if (wordBreak(s.substring(0,i), dict)) {
					return true;
				}
			}
		}
//        for (int i = 0; i < s.length(); i++) {
//        	builder.append(s.charAt(i));
//        	
//        	if (dict.contains(builder.toString())) {
//        		if (wordBreak(s.substring(i+1), dict)) {
//					return true;
//				}
//			}
//		}
        
        return false;
    }
}
