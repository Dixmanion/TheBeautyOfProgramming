package cn.edu.nju;

import java.util.ArrayList;
import java.util.concurrent.Callable;
import java.util.concurrent.Executor;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;


public class CallableDemo {

	class TaskWithResult implements Callable<String>{
		private int id;
		
		public TaskWithResult(int id) {
			this.id = id;
		}
		@Override
		public String call() throws Exception {
			return "Result of TaskWithResult " + id;
		}
		
	}
	public static void main(String[] args) {
		ExecutorService executorService = Executors.newCachedThreadPool();
		ArrayList<Future<String>> result = new ArrayList<Future<String>>();
		
		for (int i = 0; i < 10; i++) {
			
		}

	}

}
